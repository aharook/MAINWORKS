import math

# –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
x_def = 1.5
y_def = 0.1
z_def = 0.5

# –ë–µ–∑–ø–µ—á–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è —á–∏—Å–µ–ª
def get_valid_float(prompt, default):
    while True:
        value = input(prompt)
        if value.strip() == "":
            print(f"‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: {default}")
            return default
        try:
            return float(value)
        except ValueError:
            print("‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

# –ó–∞–≥–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏—Ä–∞–∑—É (abs(g) + n1 * tan(n2))
def custom_expr(n1, n2, g):
    return abs(g) + n1 * math.tan(n2)

# --- –û—Å–Ω–æ–≤–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ ---
choice = input("–•–æ—á–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º? (—Ç–∞–∫ / –Ω—ñ): ").strip().lower()

if choice in ["—Ç–∞–∫", "—Ç", "yes", "y"]:
    x = x_def
    y = y_def
    z = z_def
    print(f"\n‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: x={x}, y={y}, z={z}")
else:
    x = get_valid_float("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ x: ", x_def)
    y = get_valid_float("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ y: ", y_def)
    z = get_valid_float("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ z: ", z_def)

# –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–æ–¥–∞–Ω–∫—ñ–≤
denominator1 = custom_expr(x, y, z)
term1 = 87 / denominator1

denominator2 = custom_expr(2, y, z)
term2 = denominator2 / 34

denominator3 = custom_expr(1, 1.3, z)
term3 = 7.54 / denominator3

# –í–∏–≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
print(f"\nüîπ –ü–µ—Ä—à–∏–π –¥–æ–¥–∞–Ω–æ–∫: {term1:.4f}")
print(f"üîπ –î—Ä—É–≥–∏–π –¥–æ–¥–∞–Ω–æ–∫: {term2:.4f}")
print(f"üîπ –¢—Ä–µ—Ç—ñ–π –¥–æ–¥–∞–Ω–æ–∫: {term3:.4f}")

S = term1 + term2 + term3
print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—á–∏—Å–ª–µ–Ω–Ω—è S: {S:.4f}")
