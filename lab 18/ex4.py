def is_prime(x):
    if x < 2:
        return False
    for i in range(2, int(x**0.5) + 1):  # перевіряємо тільки до √x
        if x % i == 0:
            return False
    return True


def find_twins(n):
    for k in range(n, 2*n - 1):  # до 2n-1, бо беремо пари (k, k+2)
        if is_prime(k) and is_prime(k + 2):
            return f" вивід пари  {k} і двійника {k+2}"  # повертаємо першу знайдену пару
    return None



n = input("Введіть n: ")
try:
    n = int(n)
except ValueError:
    print("Некоректне значення. Введіть ціле додатне число.")
    exit()

pair = find_twins(n)
print(pair)



answers = [
    "1. Підпрограми доцільно використовувати, коли потрібно розбити програму на логічні частини для повторного використання, зручності супроводу та тестування.",
    "2. Так, використання підпрограм може прискорити розробку, зменшити обсяг коду через повторне використання, однак сам час виконання програми залежить від багатьох факторів.",
    "3. У C# використовуються методи (функції) та процедури. Вони відрізняються синтаксисом опису — функції мають тип повернення, процедури — ні. Викликаються через ім'я з параметрами.",
    "4. Підпрограми користувача описуються в класах. Їх область видимості визначається модифікаторами доступу (наприклад, public, private) та місцем оголошення.",
    "5. Результат виконання підпрограми залежить від логіки її реалізації та переданих параметрів. Можуть використовуватись параметри простих типів, масивів, об'єктів тощо.",
    "6. Формальні параметри — це змінні, оголошені в сигнатурі підпрограми. Фактичні — це значення, що передаються при виклику. Формальні є локальними для підпрограми.",
    "7. Результат повертається за допомогою оператора return. Тип результату повинен відповідати оголошеному типу повернення функції.",
    "8. Рекурсивними називають функції, які викликають самі себе. Для їх реалізації потрібно мати базовий випадок та умову виходу для уникнення зациклення."
]

# Функція для виводу відповіді за номером запитання
def show_answer(question_number):
    if 1 <= question_number <= len(answers):
        print(answers[question_number - 1])
    else:
        print("Невірний номер запитання. Введіть число від 1 до", len(answers))
question_number = input("Введіть номер запитання (1-8): ")
try:
    question_number = int(question_number) 
except ValueError:
    print("Некоректне значення. Введіть ціле число від 1 до 8.")
    exit()
show_answer(question_number)