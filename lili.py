import telebot
from dotenv import load_dotenv
import os
import time
import datetime
import json

load_dotenv("api_master.env")
load_dotenv("id_list.env")
TOKEN = os.getenv("TOKEN")
admin_id = os.getenv("admin_id")

bot = telebot.TeleBot(TOKEN)

# –ß–∞—Å–æ–≤–∏–π –ø–æ—è—Å
UTC_OFFSET = 3  # UTC+3

# –§–∞–π–ª –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤
SUB_FILE = "users_subscribe.json"

# –°—Ç–∞–Ω –∑–º—ñ–Ω–∏
admin_start_time = None
admin_on_break = False
admin_keyboard_sent = False
admin_shift_date = None
admin_shift_closed = False

pause_start_time = None
total_pause_time = 0

# –†–æ–ª—ñ —é–∑–µ—Ä—ñ–≤
user_roles = {}  # user_id: "admin" –∞–±–æ "user"


def local_now():
    """–ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º UTC+3"""
    return datetime.datetime.utcnow() + datetime.timedelta(hours=UTC_OFFSET)

def get_shift_date(now=None):
    """–†–æ–±–æ—á–∞ –¥–∞—Ç–∞ (–Ω–æ–≤–∏–π –¥–µ–Ω—å –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –æ 10:00)"""
    if now is None:
        now = local_now()
    if now.hour < 10:
        return (now - datetime.timedelta(days=1)).date()
    return now.date()

def admin_panel(chat_id, on_break=False, notify=False):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = telebot.types.KeyboardButton("‚ñ∂ ON")
    if on_break:
        item2 = telebot.types.KeyboardButton("‚ñ∂ CONTINUE")
    else:
        item2 = telebot.types.KeyboardButton("‚è∏ Break")
    item3 = telebot.types.KeyboardButton("‚èπ OFF")
    markup.add(item1, item2, item3)
    if notify:
        bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=markup)
    else:
        bot.send_message(chat_id, ".", reply_markup=markup)

def default_panel(chat_id, notify=False):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = telebot.types.KeyboardButton("üßê")
    markup.add(item1)
    if notify:
        bot.send_message(chat_id, "–í–∞—à–∞ —Ä–æ–ª—å: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á", reply_markup=markup)
    else:
        bot.send_message(chat_id, ".", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    global admin_start_time, admin_on_break, admin_keyboard_sent
    global admin_shift_date, admin_shift_closed, pause_start_time, total_pause_time, user_roles

    user_id = message.from_user.id
    today = get_shift_date()

    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–ª—ñ
    if user_id not in user_roles:
        if str(user_id) == str(admin_id):
            user_roles[user_id] = "admin"
            admin_panel(message.chat.id, admin_on_break, notify=True)
            admin_keyboard_sent = True
        else:
            user_roles[user_id] = "user"
            default_panel(message.chat.id, notify=True)

    # –õ–æ–≥—ñ–∫–∞ –∞–¥–º—ñ–Ω–∞
    if str(user_id) == str(admin_id):
        if message.text == "/admin":
            admin_panel(message.chat.id, admin_on_break, notify=True)
            admin_keyboard_sent = True

        elif message.text == "‚ñ∂ ON":
            if admin_start_time and not admin_shift_closed and admin_shift_date == today:
                bot.send_message(message.chat.id, "–ó–º—ñ–Ω–∞ –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∞!")
            else:
                admin_start_time = time.time()
                admin_on_break = False
                admin_shift_date = today
                admin_shift_closed = False
                pause_start_time = None
                total_pause_time = 0
                start_dt = local_now()
                formatted_start = start_dt.strftime("%H:%M:%S")
                bot.send_message(message.chat.id, f"–ó–º—ñ–Ω–∞ –ø–æ—á–∞—Ç–∞ –≤: {formatted_start}")
                if not admin_keyboard_sent:
                    admin_panel(message.chat.id, admin_on_break, notify=True)
                    admin_keyboard_sent = True

        elif message.text == "‚è∏ Break":
            if admin_start_time and not admin_on_break and not admin_shift_closed:
                pause_start_time = time.time()
                admin_on_break = True
                session_time = pause_start_time - admin_start_time - total_pause_time
                formatted_time = str(datetime.timedelta(seconds=int(session_time)))
                markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(
                    telebot.types.KeyboardButton("‚ñ∂ ON"),
                    telebot.types.KeyboardButton("‚ñ∂ CONTINUE"),
                    telebot.types.KeyboardButton("‚èπ OFF"),
                )
                bot.send_message(message.chat.id, f"–ü–µ—Ä–µ—Ä–≤–∞ —Ä–æ–∑–ø–æ—á–∞—Ç–∞! –í—ñ–¥–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ –¥–æ –ø–∞—É–∑–∏: {formatted_time}", reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–ó–º—ñ–Ω–∞ —â–µ –Ω–µ –ø–æ—á–∞—Ç–∞, –≤–∂–µ –Ω–∞ –ø–µ—Ä–µ—Ä–≤—ñ –∞–±–æ –∑–∞–∫—Ä–∏—Ç–∞!")

        elif message.text == "‚ñ∂ CONTINUE":
            if admin_on_break and not admin_shift_closed and pause_start_time:
                total_pause_time += time.time() - pause_start_time
                pause_start_time = None
                admin_on_break = False
                markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(
                    telebot.types.KeyboardButton("‚ñ∂ ON"),
                    telebot.types.KeyboardButton("‚è∏ Break"),
                    telebot.types.KeyboardButton("‚èπ OFF"),
                )
                bot.send_message(message.chat.id, "–ó–º—ñ–Ω–∞ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–∞!", reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–í–∏ –Ω–µ –Ω–∞ –ø–µ—Ä–µ—Ä–≤—ñ –∞–±–æ –∑–º—ñ–Ω–∞ –∑–∞–∫—Ä–∏—Ç–∞!")

        elif message.text == "‚èπ OFF":
            if admin_start_time and not admin_shift_closed and admin_shift_date == today:
                if admin_on_break and pause_start_time:
                    total_pause_time += time.time() - pause_start_time
                    pause_start_time = None
                    admin_on_break = False
                admin_shift_closed = True
                bot.send_message(message.chat.id, f"–ó–º—ñ–Ω–∞ –∑–∞–∫—Ä–∏—Ç–∞! ({today.strftime('%d.%m.%Y')})")
            else:
                bot.send_message(message.chat.id, "–ó–º—ñ–Ω–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∞–±–æ –≤–∂–µ –∑–∞–∫—Ä–∏—Ç–∞!")

        elif message.text == "üßê":
            if admin_shift_closed and admin_shift_date == today:
                bot.send_message(message.chat.id, f"–ó–º—ñ–Ω–∞ –Ω–∞ {today.strftime('%d.%m.%Y')} –≤–∂–µ –∑–∞–∫—Ä–∏—Ç–∞!")
            elif admin_start_time and not admin_shift_closed and admin_shift_date == today:
                if admin_on_break and pause_start_time:
                    pause_duration = time.time() - pause_start_time
                    formatted_pause = str(datetime.timedelta(seconds=int(pause_duration)))
                    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ—Ä–≤–∞ —Ç—Ä–∏–≤–∞—î: {formatted_pause}")
                else:
                    session_time = time.time() - admin_start_time - total_pause_time
                    formatted_time = str(datetime.timedelta(seconds=int(session_time)))
                    bot.send_message(message.chat.id, f"–ó–º—ñ–Ω–∞ —Ç—Ä–∏–≤–∞—î: {formatted_time}")
            else:
                bot.send_message(message.chat.id, "–ó–º—ñ–Ω–∞ —â–µ –Ω–µ –ø–æ—á–∞—Ç–∞!")

    # –õ–æ–≥—ñ–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    else:
        if message.text == "üßê":
            if admin_start_time and not admin_shift_closed and admin_shift_date == today:
                if admin_on_break and pause_start_time:
                    pause_duration = time.time() - pause_start_time
                    formatted_pause = str(datetime.timedelta(seconds=int(pause_duration)))
                    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ—Ä–≤–∞ —Ç—Ä–∏–≤–∞—î: {formatted_pause}")
                else:
                    session_time = time.time() - admin_start_time - total_pause_time
                    formatted_time = str(datetime.timedelta(seconds=int(session_time)))
                    total_shift_seconds = 6 * 60 * 60
                    remaining_seconds = max(0, total_shift_seconds - session_time)
                    formatted_remaining = str(datetime.timedelta(seconds=int(remaining_seconds)))
                    bot.send_message(
                        message.chat.id,
                        f"–í—ñ–¥–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ: {formatted_time}\n–ó–∞–ª–∏—à–∏–ª–æ—Å—å –¥–æ –∫—ñ–Ω—Ü—è –∑–º—ñ–Ω–∏: {formatted_remaining}"
                    )
            elif admin_shift_closed and admin_shift_date == today:
                bot.send_message(message.chat.id, f"–ó–º—ñ–Ω–∞ –Ω–∞ {today.strftime('%d.%m.%Y')} –≤–∂–µ –∑–∞–∫—Ä–∏—Ç–∞!")
            else:
                bot.send_message(message.chat.id, "–ó–º—ñ–Ω–∞ —â–µ –Ω–µ –ø–æ—á–∞—Ç–∞!")

def run_bot():
    while True:
        try:
            print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
            bot.polling(none_stop=True, timeout=60, long_polling_timeout=30)
        except Exception as e:
            print(f"[ERROR] –ë–æ—Ç –≤–ø–∞–≤: {e}")
            time.sleep(15)
            continue

if __name__ == "__main__":
    run_bot()